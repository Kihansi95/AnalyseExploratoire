# Represent the 10 most given names
df = ddply(prenoms, "Prénom", summarise, numb=sum(Nombre))
df = arrange(df, desc(numb))[1:10,]
df$Prénom = factor(df$Prénom, levels = df$Prénom[order(-df$numb)])   # asc = order(df$numb), desc = order(-df$numb)
ggplot(df, aes(x=Prénom, y=numb)) + geom_bar(stat="identity")    # stat="identity" tells ggplot that the order has been made. In order to display
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df$tot_length = length(strsplit(as.character(df$Prénom), "")[[1]]) * df$Nombre
df
length(strsplit(as.character(df$Prénom), "")[[1]])
df$name_length = length(strsplit(as.character(df$Prénom), "")[[1]])
length(strsplit(as.character(df$Prénom), "")[[1]])
strsplit(as.character(df$Prénom), "")[[1]]
df$name_length = length(strsplit(as.character(df$Prénom), ""))
length(strsplit(as.character(df$Prénom), ""))
strsplit(as.character(df$Prénom), "")
df$name_length = length(strsplit(as.character(df$Prénom), "").length)
?length
ddply
?ddply
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df = ddply(df, function(line) {
line$name_length = length(strsplit(as.character(df$Prénom), "")[[1]])
})
df = ddply(df, c("Prénom", "Année", "Nombre" ), function(line) {
line$name_length = length(strsplit(as.character(df$Prénom), "")[[1]])
})
)
)
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]])
df = ddply(df, c("Prénom", "Année", "Nombre" ), function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]])
})
df
head(df)
head(df)
df
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df = ddply(df, c("Prénom", "Année", "Nombre" ), name_length = function(line) {
length(strsplit(as.character(line$Prénom), "")[[1]])
})
df
df = ddply(df, c("Prénom", "Année", "Nombre" ), name_length = function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]])
})
df
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df$name_length = length(strsplit(as.character(df$Prénom), "")[[1]])
df = ddply(df, c("Prénom", "Année", "Nombre" ), function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]])
})
df
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df = ddply(df, c( "Année"), function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]]) * line$Nombre
}, Total = sum(Nombre))
df = ddply(df, c("Année", "Nombre"), function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]]) * line$Nombre
}, Total = sum(Nombre))
df = ddply(df, c("Année", "Nombre"), function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]]) * line$Nombre
}, summarise, Total = sum(Nombre))
# Select for each year the top 5 given names by sex and represent their evolution along years
df = ddply(prenoms, c("Prénom", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df = ddply(df, c("Année", "Nombre"), function(line) {
line$name_length = length(strsplit(as.character(line$Prénom), "")[[1]])
})
df
# Plot the average number of letters by year
df = subset(prenoms, select=c("Prénom", "Année", "Nombre"))
df = ddply(df, c("Année", "Nombre"), function(line) {
line["name_length"] = length(strsplit(as.character(line$Prénom), "")[[1]])
})
df
name = "duc hau"
strsplit(name, "")
strsplit(c("duc", "hau"), "")
length(strsplit(c(name, "")))
length(strsplit(name, ""))
length(strsplit(c("duc", "hau", "nguyen"), ""))
library("stringr", lib.loc="/usr/lib/R/site-library")
str_count(c("duc", "hau"), "")
str_count(c("duc", "hau", "nguyen"), "")
# Plot the average number of letters by year
str_count(as.character(prenoms$Prénom))
?ddply
return (
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"), function(x) {
return (
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"), function(x) {
return
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
})
df
return (sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre) )
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"), function(x) {
return (sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre) )
})
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"), avg = function(x) {
return (
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
return (
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
return (
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
) as avg
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df
?ddply
nrow=2
# Select for each year the top 5 given names by sex and represent their evolution along years
df = ddply(prenoms, c("Prénom", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
df = arrange(df, desc(Nombre_Personne))
first_M = df[which(df$Sexe == "M")[1:5], ]
first_F = df[which(df$Sexe == "F")[1:5], ]
df = prenoms[which(prenoms$Prénom %in% rbind(first_M, first_F)$Prénom), c("Prénom", "Sexe", "Année", "Nombre")]
ggplot(df, aes(x=Année, y=Nombre)) + geom_line(stat="identity", aes(color=Prénom, linetype=Sexe)) + geom_point(aes(color=Prénom)) + facet_wrap(~Sexe, nrow=2)
ggplot(df, aes(x=Année, y=Nombre)) + geom_line(stat="identity", aes(color=Prénom, linetype=Sexe)) + geom_point(aes(color=Prénom)) + facet_wrap(~Sexe, ncol=2)
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line(stat="identity")
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line(stat="identity")
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
df$Année = factor(df$Année)
df
# The number of births by year
df = ddply(prenoms, "Année", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df$Année = factor(df$Année)
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
df
df$Année
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df$Année = factor(df$Année)
ggplot(df, aes(x = Année, y = avg))
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
ggplot(df, aes(x = Année, y = avg)) + geom_line()
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df$Année = factor(df$Année)
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line(stat="identity")
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
df
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line(stat="identity")
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line()
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
?ggplot
df$Année=as.factor(df$Année)
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
df
ggplot(df, aes(x = Année, y = avg)) + geom_bar(stat="identity")
ggplot(df, aes(x = Année, y = avg)) + geom_line(stat="identity")
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line(stat="identity")
ggplot(df, aes(x = factor(Année), y = avg)) + geom_bar(stat="identity")
ggplot(df, aes(x = factor(Année), y = avg,group=1)) + geom_line(color="red")
ggplot(df, aes(x = factor(Année), y = avg)) + geom_line(color="red")
ggplot(df, aes(x = factor(Année), y = avg,group=1)) + geom_line(color="red")
ggplot(df, aes(x = factor(Année), y = avg,group=1)) + geom_line(color="red") + geom_point(color="red")
# Select for each year the top 5 given names by sex and represent their evolution along years
df = ddply(prenoms, c("Prénom", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
df = arrange(df, desc(Nombre_Personne))
first_M = df[which(df$Sexe == "M")[1:5], ]
first_F = df[which(df$Sexe == "F")[1:5], ]
df = prenoms[which(prenoms$Prénom %in% rbind(first_M, first_F)$Prénom), c("Prénom", "Sexe", "Année", "Nombre")]
ggplot(df, aes(x=Année, y=Nombre)) + geom_line(stat="identity", aes(color=Prénom, linetype=Sexe)) + geom_point(aes(color=Prénom)) + facet_wrap(~Sexe, nrow=2)
?str_count
str_cout("duc hau", c("a"))
vowels = c("a,e,i,o,u")
name = "duc hau"
str_cout(name, c("a"))
str_count(name, c("a"))
name = "duc hau nguyen"
str_count(name, c("a"))
str_count(name, vowels
)
str_count(name, "[aeiou]")
str_count(name, "\[aeiou]")
str_count(name, "[^aeiou]+$")
str_count(name, "[^aeiou]")
str_count(name, "")
ggplot(df) + geom_line(aes(x=factor(Année), y=vowels, color=1, group=1)) + geom_point(color=1)
ggplot(df, aes(x=factor(Année))) + geom_line(aes(y = vowels, color=1, group=1)) + geom_line(aes(y = consonants, color=2, group=2))
# Plot the average number of vowels/consonants by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[aeiou]"))/sum(x$Nombre)
)
data.frame( consonants =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[^aeiou]"))/sum(x$Nombre)
)
})
ggplot(df, aes(x=factor(Année))) + geom_line(aes(y = vowels, color=1, group=1)) + geom_line(aes(y = consonants, color=2, group=2))
# Plot the average number of vowels/consonants by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[aeiou]"))/sum(x$Nombre)
)
data.frame( consonants =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[^aeiou]"))/sum(x$Nombre)
)
})
df
# Plot the average number of vowels/consonants by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[aeiou]"))/sum(x$Nombre) ,
consonants =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[^aeiou]"))/sum(x$Nombre)
)
})
df
ggplot(df, aes(x=factor(Année))) + geom_line(aes(y = vowels, color=1, group=1)) + geom_line(aes(y = consonants, color=2, group=2))
ggplot(df, aes(x=factor(Année))) + geom_line(aes(y = vowels, color="red", group=1)) + geom_line(aes(y = consonants, color="blue", group=2))
# Plot the average number of letters by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
ggplot(df, aes(x = factor(Année), y = avg,group=1)) + geom_line(color="red") + geom_point(color="red")
## Exploring the Gray city
# read the table prenomsParis.csv
prenomsParis = read.csv2("~/Bureau/analyse_exp/prenomsParis.csv")
head(prenomsParis)
str(prenomsParis)
str(prenoms)
# repeat what you’ve done with Toulouse, rewriting as little as possible
# The number of births by year
df = ddply(prenomsParis, "Année", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")
## Exploring the Gray city
# read the table prenomsParis.csv
prenomsParis = read.csv2("~/Bureau/analyse_exp/prenomsParis.csv")
# repeat what you’ve done with Toulouse, rewriting as little as possible
# The number of births by year
df = ddply(prenomsParis, "Année", summarise, tot=sum(Nombre))
# repeat what you’ve done with Toulouse, rewriting as little as possible
# The number of births by year
df = ddply(prenomsParis, c("Année"), summarise, tot=sum(Nombre))
?ddply
# The number of births by year
df = ddply(prenoms, "Année", summarise, tot=sum(Nombre))
df = ddply(prenomsParis, "Année", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")   # The number of births by year
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")
df = ddply(prenomsParis, "Année", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")   # The number of births by year
# The number of births by year
df = ddply(prenoms, "Année", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")
df = ddply(prenomsParis, "Année", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot)) + geom_bar(stat="identity")   # The number of births by year
str(prenomsParis)
df = ddply(prenomsParis, "Annee", summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Annee), y=tot)) + geom_bar(stat="identity")   # The number of births by year
df = ddply(prenomsParis, c("Annee","Sexe"), summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Annee), y=tot, fill=Sexe)) + geom_bar(stat="identity") # The number of male/female births by year
# The number of male/female births by year
df = ddply(prenoms, c("Année","Sexe"), summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Année), y=tot, fill=Sexe)) + geom_bar(stat="identity")
df = ddply(prenomsParis, c("Annee","Sexe"), summarise, tot=sum(Nombre))
ggplot(df, aes(x=factor(Annee), y=tot, fill=Sexe)) + geom_bar(stat="identity") # The number of male/female births by year
df = ddply(prenoms, "Prénom", summarise, numb=sum(Nombre))
df = ddply(prenomsParis, "Prénom", summarise, numb=sum(Nombre))
df = ddply(prenomsParis, "Prenom", summarise, numb=sum(Nombre))
df = arrange(df, desc(numb))[1:10,]
df$Prénom = factor(df$Prenom, levels = df$Prenom[order(-df$numb)])
df = ddply(prenomsParis, "Prenom", summarise, numb=sum(Nombre))
str(prenomsParis)
df = ddply(prenomsParis, "Prenoms", summarise, numb=sum(Nombre))
df = arrange(df, desc(numb))[1:10,]
df$Prenoms = factor(df$Prenoms, levels = df$Prenoms[order(-df$numb)])
ggplot(df, aes(x=Prenoms, y=numb)) + geom_bar(stat="identity")   # Represent the 10 most given names
df = ddply(prenoms, c("Prenoms", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
View(prenoms)
df = ddply(prenomsParis, c("Prenoms", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
df = arrange(df, desc(Nombre_Personne))
first_M = df[which(df$Sexe == "M")[1:5], ]
first_F = df[which(df$Sexe == "F")[1:5], ]
first_X = df[which(df$Sexe == "X")[1:5], ]
df = prenoms[which(prenoms$Prenoms %in% rbind(first_M, first_F, first_X)$Prenoms), c("Prenoms", "Sexe", "Annee", "Nombre")]
df = ddply(prenomsParis, c("Prenoms", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
df = arrange(df, desc(Nombre_Personne))
first_M = df[which(df$Sexe == "M")[1:5], ]
first_F = df[which(df$Sexe == "F")[1:5], ]
first_X = df[which(df$Sexe == "X")[1:5], ]
df = prenoms[which(prenomsParis$Prenoms %in% rbind(first_M, first_F, first_X)$Prenoms), c("Prenoms", "Sexe", "Annee", "Nombre")]
prenomsParis
first_M
first_F
first_X
View(prenoms)
df = prenomsParis[which(prenomsParis$Prenoms %in% rbind(first_M, first_F, first_X)$Prenoms), c("Prenoms", "Sexe", "Annee", "Nombre")]
ggplot(df, aes(x=Annee, y=Nombre)) + geom_line(stat="identity", aes(color=Prenoms, linetype=Sexe)) + geom_point(aes(color=Prenoms)) + facet_wrap(~Sexe, nrow=2)
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prénom)))/sum(x$Nombre)
)
})
ggplot(df, aes(x = factor(Année), y = avg,group=1)) + geom_line(color="red") + geom_point(color="red")
View(prenoms)
df = ddply(prenomsParis, c("Annee"),  function(x) {
data.frame( avg=
sum(x$Nombre * str_count(as.character(x$Prenoms)))/sum(x$Nombre)
)
})
ggplot(df, aes(x = factor(Annee), y = avg,group=1)) + geom_line(color="red") + geom_point(color="red")
# Plot the average number of vowels/consonants by year
df = ddply(prenomsParis, c("Annee"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prenoms) , "[aeiou]"))/sum(x$Nombre) ,
consonants =
sum(x$Nombre * str_count(as.character(x$Prenoms) , "[^aeiou]"))/sum(x$Nombre)
)
})
ggplot(df, aes(x=factor(Annee))) + geom_line(aes(y = vowels, color="red", group=1)) + geom_line(aes(y = consonants, color="blue", group=2))
ggplot(df, aes(x=factor(Année))) + geom_line(aes(y = vowels, color="red", group=1)) + geom_line(aes(y = consonants, color="blue", group=2))
# Plot the average number of vowels/consonants by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[aeiou]"))/sum(x$Nombre) ,
consonants =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[^aeiou]"))/sum(x$Nombre)
)
})
ggplot(df, aes(x=factor(Année))) + geom_line(aes(y = vowels, color="red", group=1)) + geom_line(aes(y = consonants, color="blue", group=2))
?melt
# Plot the average number of vowels/consonants by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[aeiou]"))/sum(x$Nombre) ,
consonants =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[^aeiou]"))/sum(x$Nombre)
)
})
# >>> 2ème solution :
df$Année = as.factor(df$Année)
df_long = melt.data.frame(id=Année)
melt
df_long = melt(id=Année)
df_long = melt(datat = df, id=Année)
df_long = melt(df, id=Année)
df_long = melt(df, id="Année")
df_long
ggplot(df_long, aes(x=factor(Année), y=value, color=variable)) + geom_line() + geom_point()
ggplot(df_long, aes(x =Année, y=value, color=variable)) + geom_line() + geom_point()
ggplot(df_long, aes(x =Année, y=value, color=variable)) + geom_line(group=variable) + geom_point()
## Exploring the Gray city
# read the table prenomsParis.csv
prenomsParis = read.csv2("~/Bureau/analyse_exp/prenomsParis.csv")
# Plot the average number of vowels/consonants by year
df = ddply(prenoms, c("Année"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[aeiou]"))/sum(x$Nombre) ,
consonants =
sum(x$Nombre * str_count(as.character(x$Prénom) , "[^aeiou]"))/sum(x$Nombre)
)
})
# >>> 2ème solution :
df$Année = as.factor(df$Année)
df_long = melt(df, id="Année")
ggplot(df_long, aes(x =Année, y=value, color=variable)) + geom_line(group=variable) + geom_point()
ggplot(df_long, aes(x =Année, y=value, color=variable, group=variable)) + geom_line() + geom_point()
# Plot the average number of vowels/consonants by year
df = ddply(prenomsParis, c("Annee"),  function(x) {
data.frame( vowels =
sum(x$Nombre * str_count(as.character(x$Prenoms) , "[aeiou]"))/sum(x$Nombre) ,
consonants =
sum(x$Nombre * str_count(as.character(x$Prenoms) , "[^aeiou]"))/sum(x$Nombre)
)
})
df$Annee = as.factor(df$Annee)
df = melt(df, id="Annee")
ggplot(df, aes(x =Annee, y=value, color=variable, group=variable)) + geom_line() + geom_point()
# Represent the 10 most given names
df = ddply(prenoms, "Prénom", summarise, numb=sum(Nombre))
df = arrange(df, desc(numb))[1:10,]
df$Prénom = factor(df$Prénom, levels = df$Prénom[order(-df$numb)])   # asc = order(df$numb), desc = order(-df$numb)
ggplot(df, aes(x=Prénom, y=numb)) + geom_bar(stat="identity")    # stat="identity" tells ggplot that the order has been made. In order to display
# Select for each year the top 5 given names by sex and represent their evolution along years
df = ddply(prenoms, c("Prénom", "Sexe"), summarise, Nombre_Personne = sum(Nombre))
df = arrange(df, desc(Nombre_Personne))
first_M = df[which(df$Sexe == "M")[1:5], ]
first_F = df[which(df$Sexe == "F")[1:5], ]
df = prenoms[which(prenoms$Prénom %in% rbind(first_M, first_F)$Prénom), c("Prénom", "Sexe", "Année", "Nombre")]
ggplot(df, aes(x=Année, y=Nombre)) + geom_line(stat="identity", aes(color=Prénom, linetype=Sexe)) + geom_point(aes(color=Prénom)) + facet_wrap(~Sexe, nrow=2)
# Combine observations made on the two cities.
# >>> Format names
colnames(prenomsParis)[which(names(prenomsParis) == "Annee")] <- "Année"
colnames(prenomsParis)[which(names(prenomsParis) == "Prenoms")] <- "Prénom"
str(prenomsParis)
combination = rbind(prenoms, prenomsParis)
?rbind
str(prenoms)
## Exploring the Pink city
# read the table prenoms.csv
prenoms = read.csv2("~/Bureau/analyse_exp/prenoms.csv")
str(prenoms)
combination = rbind(subset(prenoms, c("Prénom", "Nombre", "Sexe", "Année")), prenomsParis)
?subset
combination = rbind(subset(prenoms, select = c("Prénom", "Nombre", "Sexe", "Année")), prenomsParis)
combination
?bind
?rbind
prenoms2 = subset(prenoms, select = c("Prénom", "Nombre", "Sexe", "Année"))
prenoms2$Ville = "Toulouse"
prenomsParis$Ville = "Paris"
prenomsToulouse = subset(prenoms, select = c("Prénom", "Nombre", "Sexe", "Année"))
prenomsToulouse$Ville = "Toulouse"
prenomsParis$Ville = "Paris"
combination = rbind(prenomsToulouse, prenomsParis)
combination
# Normalise by the number of births
combination$Nombre = normalize(combination$Nombre, method="standardize", range=c(0, 1))
??normalize
# Normalise by the number of births
combination$Nombre = normalise(combination$Nombre, method="standardize", range=c(0, 1))
??normalise
?normalise
??normalise
?scaled
?scale
source('~/Documents/5A/analyse_exp/project/analyse.R')
source('~/Documents/5A/analyse_exp/project/analyse.R')
## olympic-history-athletes-and-results
olympic_dataset = read.csv2("data/olympic-history-athletes-and-results/athlete_events.csv",sep=",")
setwd("~/Documents/5A/analyse_exp/project")
## olympic-history-athletes-and-results
olympic_dataset = read.csv2("data/olympic-history-athletes-and-results/athlete_events.csv",sep=",")
str(olympic_dataset)
## olympic-history-athletes-and-results
olympic_dataset = read.csv2("data/olympic-history-athletes-and-results/athlete_events.csv",sep=".")
str(olympic_dataset)
## olympic-history-athletes-and-results
olympic_dataset = read.csv2("data/olympic-history-athletes-and-results/athlete_events.csv",sep=",", dec=".")
str(olympic_dataset)
olympic_dataset$Team
clear
cls
## olympic-history-athletes-and-results
olympic_dataset = read.csv2("data/olympic-history-athletes-and-results/athlete_events.csv",sep=",", dec=".")
str(olympic_dataset)
str(olympic_dataset)
source(file="preproccessing.R")
source(file="preprocessing.R")
